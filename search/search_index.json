{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>rCTF is redpwnCTF's CTF platform. It is developed and maintained by the redpwn CTF team.</p> <p>To install rCTF, see the installation doc.</p> <p>If you need help with rCTF, join the the redpwnCTF Discord server and ask questions in the <code>#rctf-help</code> channel.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>You can specify configuration to rCTF through <code>conf.d</code> or environment variables. Most values can be set through either.</p> <p>YAML and JSON files in the <code>conf.d</code> directory are sorted alphabetically. Files later alphabetically have higher priority when merging config. Environment variables are always given highest priority.</p> <p>In general, all config should be specified via YAML/JSON when possible as they provide the most flexibility.</p> <p>For example, if <code>00-example.yaml</code> contained:</p> <pre><code>meta:\n  description: abc\n  imageUrl: https://example.com\n</code></pre> <p>and <code>99-example.yml</code> contained:</p> <pre><code>ctfName: foo\nmeta:\n  description: xyz\n</code></pre> <p>and the environment contained:</p> <pre><code>RCTF_NAME=bar\n</code></pre> <p>The resulting config would be:</p> <pre><code>ctfName: bar\nmeta:\n  description: xyz\n  imageUrl: https://example.com\n</code></pre>"},{"location":"configuration/#configuration_1","title":"Configuration","text":""},{"location":"configuration/#core","title":"Core","text":"<p>Important values to configure to customize your CTF. </p> YAML/JSON name environment name required default value type description <code>ctfName</code> <code>RCTF_NAME</code> yes (none) string name of the CTF throughout the UI <code>meta.description</code> <code>RCTF_META_DESCRIPTION</code> yes <code>''</code> string OpenGraph and Twitter embed description <code>meta.imageUrl</code> <code>RCTF_IMAGE_URL</code> yes <code>''</code> string OpenGraph and Twitter embed image URL <code>origin</code> <code>RCTF_ORIGIN</code> yes (none) string public URL of the rCTF instance <code>homeContent</code> <code>RCTF_HOME_CONTENT</code> yes <code>''</code> string markdown content for the homepage of the CTF. documentation <code>startTime</code> <code>RCTF_START_TIME</code> yes (none) integer time at which the CTF starts, in milliseconds since the epoch <code>endTime</code> <code>RCTF_END_TIME</code> yes (none) integer time at which the CTF ends, in milliseconds since the epoch <code>divisions</code> (none) yes (none) object division IDs and their respective names. documentation <code>defaultDivision</code> (none) no (none) string default division ID. documentation <code>divisionACLs</code> (none) no (none) array ACLs for restricting division access. documentation <code>faviconUrl</code> <code>RCTF_FAVICON_URL</code> no (rCTF favicon) string URL to custom favicon image"},{"location":"configuration/#additional","title":"Additional","text":"<p>Optional configuration to enable additional features. </p> YAML/JSON name environment name required default value type description <code>sponsors</code> (none) yes <code>[]</code> array list of CTF sponsors. documentation <code>globalSiteTag</code> <code>RCTF_GLOBAL_SITE_TAG</code> no (none) string Google Analytics site tag <code>logoUrl</code> <code>RCTF_LOGO_URL</code> no (none) string URL to raster image of the CTF's logo. used in emails <code>email.provider</code> (none) no (none) provider provider for email sending. documentation <code>email.from</code> (none) no (none) provider <code>from:</code> address when sending email. documentation <code>ctftime.clientId</code> <code>RCTF_CTFTIME_CLIENT_ID</code> no (none) string CTFtime OAuth client ID. documentation <code>ctftime.clientSecret</code> <code>RCTF_CTFTIME_CLIENT_SECRET</code> no (none) string CTFtime OAuth client secret. documentation <code>recaptcha.siteKey</code> <code>RCTF_RECAPTCHA_SITE_KEY</code> no (none) string reCAPTCHA public site key. documentation <code>recaptcha.secretKey</code> <code>RCTF_RECAPTCHA_SECRET_KEY</code> no (none) string reCAPTCHA secret key. documentation <code>recaptcha.protectedActions</code> (none) no (none) array list of reCAPTCHA protected actions. documentation"},{"location":"configuration/#advanced","title":"Advanced","text":"<p>Configuration for advanced users - sane defaults are automatically set by the installation script. </p> YAML/JSON name environment name required default value type description <code>tokenKey</code> <code>RCTF_TOKEN_KEY</code> yes (none) string base64 encoded 32 byte key used for encrypting tokens <code>proxy.cloudflare</code> (none) yes <code>false</code> boolean whether or not rCTF is behind Cloudflare; if <code>true</code>, do not use <code>proxy.trust</code> <code>proxy.trust</code> (none) yes <code>false</code> boolean, string, string array, or integer X-Forwarded-For trust: the trust parameter to proxy-addr <code>loginTimeout</code> <code>RCTF_LOGIN_TIMEOUT</code> yes 3600000 integer lifetime of registration, email update, and recovery links, in milliseconds <code>userMembers</code> <code>RCTF_USER_MEMBERS</code> yes <code>true</code> boolean whether to allow a user to provide emails for individual members <code>database.migrate</code> <code>RCTF_DATABASE_MIGRATE</code> yes <code>never</code> <code>before | only | never</code> how to run postgreSQL migrations. documentation <code>instanceType</code> <code>RCTF_INSTANCE_TYPE</code> yes <code>all</code> <code>all | frontend | leaderboard</code> what type of instance to run. documentation <code>challengeProvider</code> (none) yes <code>database</code> provider provider for challenges. documentation <code>uploadProvider</code> (none) yes <code>local</code> provider provider for challenge file uploads. documentation <code>database.sql</code> <code>RCTF_DATABASE_URL</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string <code>postgres://</code> connection URI <code>database.sql.host</code> <code>RCTF_DATABASE_HOST</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string hostname of a postgreSQL server <code>database.sql.port</code> <code>RCTF_DATABASE_PORT</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string port number that postgreSQL is running on <code>database.sql.user</code> <code>RCTF_DATABASE_USERNAME</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string postgreSQL username to authenticate with <code>database.sql.password</code> <code>RCTF_DATABASE_PASSWORD</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string postgreSQL password to authenticate with <code>database.sql.database</code> <code>RCTF_DATABASE_DATABASE</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string postgreSQL database to use <code>database.redis</code> <code>RCTF_REDIS_URL</code> either <code>database.redis</code> or <code>database.redis.*</code> (none) string <code>redis://</code> connection URI <code>database.redis.host</code> <code>RCTF_REDIS_HOST</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string hostname of a redis server <code>database.redis.post</code> <code>RCTF_REDIS_PORT</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string port number that redis is running on <code>database.redis.password</code> <code>RCTF_REDIS_PASSWORD</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string redis password to authenticate with <code>database.redis.database</code> <code>RCTF_REDIS_DATABASE</code> either <code>database.sql</code> or <code>database.sql.*</code> (none) string redis numerical database ID to use <code>leaderboard.maxLimit</code> <code>RCTF_LEADERBOARD_MAX_LIMIT</code> yes 100 integer maximum number of users retrievable in a single leaderboard request <code>leaderboard.maxOffset</code> <code>RCTF_LEADERBOARD_MAX_OFFSET</code> yes 4294967296 integer maximum offset from the beginning of the leaderboard <code>leaderboard.updateInterval</code> <code>RCTF_LEADERBOARD_UPDATE_INTERVAL</code> yes 10000 integer interval at which the leaderboard is recalculated, in milliseconds <code>leaderboard.graphMaxTeams</code> <code>RCTF_LEADERBOARD_GRAPH_MAX_TEAMS</code> yes 10 integer maximum number of users retrievable in a graph request <code>leaderboard.graphSampleTime</code> <code>RCTF_LEADERBOARD_GRAPH_SAMPLE_TIME</code> yes 1800000 integer interval at which the score graph is sampled, in milliseconds"},{"location":"configuration/#custom-confd-location","title":"Custom <code>conf.d</code> location","text":"<p>The <code>conf.d</code> directory can be renamed or moved elsewhere. To do so, set the <code>RCTF_CONF_PATH</code> environment variable to the location of a directory of YAML or JSON configuration files. If specified as a relative path, the path is evaluated from the current working directory.</p>"},{"location":"installation/","title":"Installation","text":"<p>You can install rCTF in one command with the installer script.</p> <pre><code>curl https://get.rctf.redpwn.net | sh\n</code></pre>"},{"location":"installation/#after-installation","title":"After installation","text":"<p>To configure rCTF, see the configuration doc.</p> <p>To update the CTF's challenges, see the admin doc.</p> <p>To scale up rCTF, see the migration and scaling docs.</p>"},{"location":"development/manual-installation/","title":"Manual Installation","text":"<p>Manual installation of rCTF is useful to develop and modify the project.</p> <p>To run rCTF locally, you'll need node and yarn.</p> <p>Clone the rCTF repository:</p> <pre><code>git clone https://github.com/redpwn/rctf\n</code></pre> <p>After cloning, you will need to setup the configuration files in the <code>conf.d</code> directory. An example <code>conf.d</code> is used for testing.</p> <p>To develop rCTF, run:</p> <pre><code>yarn dev\n</code></pre> <p>To simulate a full production build, run:</p> <pre><code>yarn build &amp;&amp; yarn start\n</code></pre>"},{"location":"integrations/ctftime/","title":"CTFtime OAuth","text":"<p>To allow teams to login via their CTFtime teams, you need an event on CTFtime. You can register for one here.</p> <p>In the OAuth endpoint field on the event editing page, enter:</p> <pre><code>https://your-rctf.example.com/integrations/ctftime/callback\n</code></pre> <p>Copy the client ID and client secret and place them in <code>ctftime.clientId</code> and <code>ctftime.clientSecret</code> or <code>RCTF_CTFTIME_CLIENT_ID</code> and <code>RCTF_CTFTIME_CLIENT_SECRET</code>.</p> <pre><code>ctftime:\n  clientId: 123\n  clientSecret: abcd\n</code></pre>"},{"location":"integrations/recaptcha/","title":"reCAPTCHA","text":"<p>To protect specific actions from abuse, configure reCAPTCHA credentials. You can register for credentials here.</p> <p>Copy the corresponding values from Google into <code>recaptcha.siteKey</code> and <code>recaptcha.secretKey</code> fields or <code>RCTF_RECAPTCHA_SITE_KEY</code> and <code>RCTF_RECAPTCHA_SECRET_KEY</code>.</p> <p>You must also configure <code>recaptcha.protectedActions</code> as a list of strings specifying which actions require a reCAPTCHA.</p> <p>Valid protected action values are:</p> <ul> <li><code>register</code></li> <li><code>recover</code></li> <li><code>setEmail</code></li> </ul> <p>For example, to prevent automated registration and recovery, use:</p> <pre><code>recaptcha:\n  siteKey: AAA\n  secretKey: BBB\n  protectedActions:\n    - register\n    - recover\n</code></pre>"},{"location":"management/admin/","title":"Challenge Admin","text":"<p>rCTF integrates with rCDS, which can automatically deploy challenges and sync them to rCTF.</p> <p>To use rCTF without rCDS, create an admin user normally. Then, connect to postgreSQL and run:</p> <pre><code>UPDATE users SET perms=3 WHERE id='your user id';\n</code></pre> <p>After running, you can manage the CTF's challenges using a web UI at:</p> <pre><code>https://your-rctf.example.com/admin/challs\n</code></pre>"},{"location":"management/divisions/","title":"Divisions","text":"<p>Divisions can be used in rCTF to segregate users into different scoreboards, with optional access control lists based on verified email addresses. Every user must be in exactly one division, although users can change their division at any time (provided the new division satisfies the ACL).</p> <ul> <li><code>divisions</code> is a map from a division ID to its human readable name shown in the UI.</li> <li><code>defaultDivision</code> is the division ID that new users will be placed into.</li> <li><code>divisionACLs</code> is a priority list of ACL elements. Only one element matches an email at a time, and each element contains <code>match</code>, <code>value</code>, and an allowed <code>divisions</code> list. If the <code>divisions</code> list contains multiple elements, the first element is used while registering.</li> </ul> <p>Possible <code>match</code> values are:</p> <ul> <li><code>domain</code>: The <code>value</code> contains a domain which the user's email must be from.</li> <li><code>email</code>: The <code>value</code> contains an exact email which the user's must match.</li> <li><code>regex</code>: The <code>value</code> contains a RegEx used to match the user's domain.</li> <li><code>any</code>: All emails are matched. The <code>value</code> is ignored.</li> </ul> <p>To define a list of divisions with no restrictions, set <code>divisions</code> and <code>defaultDivision</code>:</p> <pre><code>divisions:\n  open: Open\n  hs: High School\n  college: College\ndefaultDivision: open\n</code></pre> <p>To define a list of restricted divisions:</p> <pre><code>divisions:\n  corp: Example Corp\n  open: Open\ndivisionACLs:\n  - match: domain\n    value: example.com\n    divisions:\n      - corp\n  - match: email\n    value: external-user@example.org\n    divisions:\n      - corp\n  - match: any\n    value: ''\n    divisions:\n      - open\n</code></pre>"},{"location":"management/home/","title":"Home Page","text":"<p>The home page of your CTF can be configured with various content in markdown and HTML via <code>homeContent</code> or <code>RCTF_HOME_CONTENT</code>.</p> <p>In addition to normal HTML, you can use some custom elements.</p> <ul> <li><code>&lt;timer&gt;&lt;/timer&gt;</code>: a countdown timer until the beginning or end of the CTF</li> <li><code>&lt;sponsors&gt;&lt;/sponsors&gt;</code>: a list of sponsor cards (see configuration)</li> <li><code>&lt;action-button&gt;&lt;/action-button&gt;</code>: a button with hover effects, generally used as a link to <code>/register</code></li> </ul> <pre><code>homeContent: |\n  # Heading\n\n  ### Subheading\n  Text\n\n  &lt;action-button href=\"/register\"&gt;\n    &lt;span&gt;Register Now&lt;/span&gt;\n    &lt;svg viewBox=\"4 4 16 16\"&gt;&lt;path fill=\"#ffffff\" d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"&gt;&lt;/path&gt;&lt;/svg&gt;\n  &lt;/action-button&gt;\n\n  &lt;timer&gt;&lt;/timer&gt;\n\n  ### Sponsors\n  Thank you to our wonderful sponsors for making this event possible!\n\n  &lt;sponsors&gt;&lt;/sponsors&gt;\n</code></pre>"},{"location":"management/home/#sponsor-cards","title":"Sponsor Cards","text":"<p>The <code>&lt;sponsors&gt;</code> element can be used to display cards for the sponsors listed in the config under <code>sponsors</code>.</p>"},{"location":"management/home/#configuration","title":"Configuration","text":"<p>The <code>sponsors</code> key takes an array of sponsor elements, which are each an object with the following properties:</p> Key Default Description <code>name</code> (none) sponsor name <code>icon</code> (none) sponsor icon URL <code>description</code> (none) sponsor description <code>small</code> <code>false</code> whether to show as a compact card"},{"location":"management/home/#example","title":"Example","text":"<pre><code>sponsors:\n  - name: Foo\n    icon: https://example.com/foo.png\n    description: |\n      An excellent sponsor\n  - name: Bar\n    icon: https://example.com/bar.png\n    description: |\n      An excellent sponsor\n    small: true\n</code></pre>"},{"location":"management/migration/","title":"Migration","text":"<p>To support database format changes, rCTF uses migrations to update the postgreSQL structure.</p> <p>The initial database structure also relies on migrations. Therefore, if automatic migrations aren't enabled, you must run manual migrations before rCTF starts up for the first time.</p>"},{"location":"management/migration/#automatic-migrations","title":"Automatic migrations","text":"<p>If you want migrations to be run automatically at server startup, set <code>database.migrate</code> or <code>RCTF_DATABASE_MIGRATE</code> to <code>before</code>.</p> <pre><code>database:\n  migrate: before\n</code></pre> <p>Automatic migrations incur a startup cost, which can be significant if running at scale. Therefore, for large deployments, manual migrations should be used.</p>"},{"location":"management/migration/#manual-migrations","title":"Manual migrations","text":"<p>If you want to disable automatic migrations, set <code>database.migrate</code> or <code>RCTF_DATABASE_MIGRATE</code> to <code>never</code>.</p> <pre><code>database:\n  migrate: never\n</code></pre> <p>Then, when you need to run migrations, run:</p> <pre><code>yarn migrate\n</code></pre> <p>Alternatively, you can set <code>database.migrate</code> or <code>RCTF_DATABASE_MIGRATE</code> to <code>only</code> and run rCTF. rCTF will exit when migrations are complete.</p>"},{"location":"management/scaling/","title":"Scaling","text":"<p>rCTF can be split into two types of instances.</p> <ul> <li>Frontend instances are horizontally scalable and handle incoming requests</li> <li>A single leaderboard instance does leaderboard and graph data calculations.</li> </ul>"},{"location":"management/scaling/#smaller-installations","title":"Smaller installations","text":"<p>For smaller rCTF installations, both instances can be run within a single process. To do this, set <code>instanceType</code> or <code>RCTF_INSTANCE_TYPE</code> to <code>all</code>.</p> <pre><code>instanceType: all\n</code></pre>"},{"location":"management/scaling/#large-installations","title":"Large installations","text":"<p>For larger rCTF installations, you can run infinite frontend instances, but make sure to only run a single leaderboard instance. Frontend instances should have <code>instanceType</code> or <code>RCTF_INSTANCE_TYPE</code> set to <code>frontend</code>.</p> <pre><code>instanceType: frontend\n</code></pre> <p>Leaderboard instances should have <code>instanceType</code> or <code>RCTF_INSTANCE_TYPE</code> set to <code>leaderboard</code>.</p> <pre><code>instanceType: leaderboard\n</code></pre>"},{"location":"providers/","title":"Providers","text":"<p>The provider system allows for flexible configuration of backends. Each provider provides a different option for how certain functionality should be implemented. As opposed to a generic plugin system, this allows for more defined customizations. </p>"},{"location":"providers/challenges/","title":"Challenge Provider Index","text":"<p>Challenge providers store the list of challenges in the CTF. At the moment, there is one challenge provider available:</p> <ul> <li>Database</li> </ul>"},{"location":"providers/challenges/database/","title":"Database Challenge Provider","text":"<p>The database challenge provider stores challenge details in the postgreSQL database. To use it, specify <code>challenges/database</code> for the challenge provider name.</p>"},{"location":"providers/challenges/database/#configuration-example","title":"Configuration Example","text":"<pre><code>challengeProvider:\n  name: 'challenges/database'\n</code></pre>"},{"location":"providers/emails/","title":"Email Provider Index","text":"<p>Email providers send emails to competitors. In rCTF, emails are used for registration, email updates, and recovery. At the moment, there are three email providers available:</p> <ul> <li>Mailgun</li> <li>SES</li> <li>SMTP</li> </ul>"},{"location":"providers/emails/mailgun/","title":"Mailgun Email Provider","text":"<p>The Mailgun email provider sends email via the Mailgun API. To use it, specify <code>emails/mailgun</code> for the email provider name.</p>"},{"location":"providers/emails/mailgun/#configuration-options","title":"Configuration Options","text":"Option Description <code>apiKey</code> Your Mailgun API key. <code>domain</code> One of your Mailgun domains."},{"location":"providers/emails/mailgun/#configuration-example","title":"Configuration Example","text":"<pre><code>email:\n  from: no-reply@sandboxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.mailgun.org\n  provider:\n    name: 'emails/mailgun'\n    options:\n      apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-xxxxxxxx-xxxxxxxx'\n      domain: 'sandboxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.mailgun.org'\n</code></pre>"},{"location":"providers/emails/ses/","title":"SES Email Provider","text":"<p>The SES email provider sends email via the Amazon Simple Email Service. To use it, specify <code>emails/ses</code> for the email provider name.</p> <p>The key specified in <code>awsKeyId</code> and <code>awsKeySecret</code> must have the <code>ses:SendEmail</code> IAM permission.</p>"},{"location":"providers/emails/ses/#configuration-options","title":"Configuration Options","text":"Option Description <code>awsKeyId</code> The AWS IAM key ID used to send emails. <code>awsKeySecret</code> The AWS IAM key secret used to send emails. <code>awsRegion</code> The AWS region used to send emails."},{"location":"providers/emails/ses/#configuration-example","title":"Configuration Example","text":"<pre><code>email:\n  from: no-reply@example.com\n  provider:\n    name: emails/ses\n    options:\n      awsKeyId: ABCDABCD\n      awsKeySecret: abcdabcd\n      awsRegion: us-east-1\n</code></pre>"},{"location":"providers/emails/smtp/","title":"SMTP Email Provider","text":"<p>The SMTP email provider sends email via a SMTP server. To use it, specify <code>emails/smtp</code> for the email provider name.</p>"},{"location":"providers/emails/smtp/#configuration-options","title":"Configuration Options","text":"Option Description <code>smtpUrl</code> The URL of the SMTP server. See the nodemailer docs if you want to use connection pooling."},{"location":"providers/emails/smtp/#configuration-example","title":"Configuration Example","text":"<pre><code>email:\n  from: no-reply@example.com\n  provider:\n    name: 'emails/smtp'\n    options:\n      smtpUrl: 'smtp://a:b@example.com'\n</code></pre>"},{"location":"providers/uploads/","title":"Upload Provider Index","text":"<p>Upload providers store files for each challenge. At the moment, there are two upload providers available:</p> <ul> <li>Google Cloud Storage</li> <li>Local</li> </ul>"},{"location":"providers/uploads/gcs/","title":"GCS Upload Provider","text":"<p>The GCS upload provider uploads challenge resources to Google Cloud Storage. To use it, specify <code>uploads/gcs</code> for the upload provider name.</p> <p>The key specified must have the <code>storage.objects.create</code>, <code>storage.objects.get</code>, and <code>storage.objects.list</code> permissions.</p>"},{"location":"providers/uploads/gcs/#configuration-options","title":"Configuration Options","text":"Option Description <code>credentials.private_key</code> The PEM-encoded private key for the service account with access to the GCS bucket. <code>credentials.client_email</code> The email of the service account with access to the GCS bucket. <code>bucketName</code> The name of the GCS bucket."},{"location":"providers/uploads/gcs/#configuration-example","title":"Configuration Example","text":"<pre><code>uploadProvider:\n  name: 'uploads/gcs'\n  options:\n    credentials:\n      private_key: |-\n        -----BEGIN PRIVATE KEY-----\n        ABCDABCD\n        -----END PRIVATE KEY-----\n      client_email: service-account-name@project-id.iam.gserviceaccount.com\n</code></pre>"},{"location":"providers/uploads/local/","title":"Local Upload Provider","text":"<p>The local upload provider stores files on the local file system. To use it, specify <code>uploads/local</code> for the upload provider name.</p> <p>rCTF must have write access to the <code>uploadDirectory</code>.</p>"},{"location":"providers/uploads/local/#configuration-options","title":"Configuration Options","text":"Option Description <code>uploadDirectory</code> The directory where uploaded files are stored. (default: <code>uploads</code>) <code>endpoint</code> The endpoint from which uploaded files are served. (default: <code>/uploads</code>)"},{"location":"providers/uploads/local/#configuration-example","title":"Configuration Example","text":"<pre><code>uploadProvider:\n  name: 'uploads/local'\n  options:\n    uploadDirectory: 'uploads'\n    endpoint: '/uploads'\n</code></pre>"},{"location":"providers/uploads/s3/","title":"S3 Upload Provider","text":"<p>The S3 upload provider uploads challenge resources to AWS S3 cloud storage. To use it, specify <code>uploads/s3</code> for the upload provider name.</p>"},{"location":"providers/uploads/s3/#configuration-options","title":"Configuration Options","text":"Option Description <code>credentials.access_key_id</code> The AWS access key id <code>credentials.secret_access_key</code> The AWS secret access key <code>bucketName</code> The name of the bucket. <code>region</code> The AWS region of the bucket."},{"location":"providers/uploads/s3/#configuration-example","title":"Configuration Example","text":"<pre><code>uploadProvider:\n  name: 'uploads/s3'\n  options:\n    credentials:\n      accessKeyId: \"KEYHERE\",\n      secretAccessKey: \"SECRETKEYHERE\"\n    region: \"us-west-1\"\n    bucketName: \"acmcyber-platform\"\n</code></pre>"}]}